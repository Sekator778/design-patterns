Bridge is a structural design pattern that divides business logic or huge class into separate class hierarchies that can be developed independently. It is a combination of two patterns, namely, the Adapter pattern and the Decorator pattern. The Bridge pattern is used when we need to decouple an abstraction from its implementation so that the two can vary independently.

One of these hierarchies (often called the Abstraction) will get a reference to an object of the second hierarchy (Implementation). The abstraction will be able to delegate some (sometimes, most) of its calls to the implementations object. Since all implementations will have a common interface, they would be interchangeable inside the abstraction.